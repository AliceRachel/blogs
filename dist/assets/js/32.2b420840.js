(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{175:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("总结NodeJS常用的API，重点地方有笔者的释义以及详细说明;关联度高的模块放一起叙述，并有对比说明。比如buffer与fs，stream与http，process与child_process。本文尽量做到兼具实用与API广度，建议多读读"),a("a",{attrs:{href:"https://nodejs.org/dist/latest-v11.x/docs/api/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node JS官网文档"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"path"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#path","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://nodejs.org/dist/latest-v11.x/docs/api/path.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("path"),a("OutboundLink")],1)]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("url 模块提供了两套 API 来处理 URL 字符串：一个是Node.js特有的API，是旧版本的遗留；另一个则是实现了WHATWG URL Standard的 API (const {URL} = require('url')方式)，该标准也在各种浏览器中被使用。")]),t._v(" "),a("p",[t._v("旧版url api，"),a("a",{attrs:{href:"http://nodejs.cn/api/url.html#url_the_whatwg_url_api",target:"_blank",rel:"noopener noreferrer"}},[t._v("新版URL Standard见这"),a("OutboundLink")],1),t._v("：")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),a("p",[t._v("以下对象继承了可读流：")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),a("p",[t._v("在 TCP 流或文件系统操作等场景中处理字节流。Buffer 类是一个全局变量。Buffer 类的实例类似于整数数组，但 Buffer 的大小是固定的、且在 V8 堆外分配物理内存。 Buffer 的大小在创建时确定，且无法改变。")]),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),a("h2",{attrs:{id:"file-system"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-system","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://nodejs.org/dist/latest-v11.x/docs/api/fs.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("File System"),a("OutboundLink")],1)]),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),a("h2",{attrs:{id:"processglobal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processglobal","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://nodejs.org/api/process.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Process"),a("OutboundLink")],1),t._m(21)]),t._v(" "),a("p",[t._v("process对象是一个提供当前node进程信息的全局对象，所以该对象不需要require()引入。process同时也是"),a("a",{attrs:{href:"https://nodejs.org/api/events.html#events_class_eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t._v("EventEmitter"),a("OutboundLink")],1),t._v("（典型的发布订阅模式案例）的一个实例，所以有.on()等方法。")]),t._v(" "),a("ul",[t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),a("li",[a("p",[a("code",[t._v("process signal Events")]),t._v("。当"),a("a",{attrs:{href:"http://man7.org/linux/man-pages/man7/signal.7.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("标准POSIX信号"),a("OutboundLink")],1),t._v("被触发(通常是process.kill(signal)或Ctrl+C等操作)，nodejs进程可以通过监听对应信号来进行回调。")]),t._v(" "),t._m(26)])]),t._v(" "),a("h2",{attrs:{id:"child-process"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#child-process","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api/child_process.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("child_process"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("子程序，在node中，child_process这个模块非常重要。熟悉shell脚本的同学，可以用它的异步特性完成很多事情。")]),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._m(32),t._v(" "),t._m(33),t._m(34),t._v(" "),t._m(35),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/chyingp/p/node-learning-guide-child_process.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nodejs进阶：如何玩转子进程（child_process）"),a("OutboundLink")],1)])])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"node-常用api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-常用api","aria-hidden":"true"}},[this._v("#")]),this._v(" Node-常用API")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("code",[t._v("__filename")]),t._v("。全局值，当前文件绝对路径")]),t._v(" "),a("li",[a("code",[t._v("__dirname")]),t._v("。全局值，当前文件夹绝对路径。等效于path.resolve(__filename, '..')")]),t._v(" "),a("li",[a("code",[t._v("path.join([...paths])")]),t._v("。相当于把所传入的任意多的参数 按照顺序 进行命令行般的推进"),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("path"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("join")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'a'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v("'b'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v("'../c/lolo'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// a/c/lolo")]),t._v("\n")])])])]),t._v(" "),a("li",[a("code",[t._v("path.resolve([...paths])")]),t._v("。以当前文件的路径为起点，返回绝对路径。可以理解为每次都是新建cd命令"),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("path"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("resolve")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'/a'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'/b'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// '/b'")]),t._v("\npath"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("resolve")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'./a'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'./b'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// '/User/../a/b'")]),t._v("\n")])])])]),t._v(" "),a("li",[a("code",[t._v("path.dirname(path(string))")]),t._v("。返回指定的路径 所在文件夹的绝对路径")]),t._v(" "),a("li",[a("code",[t._v("path.basename(path(string))")]),t._v("。返回指定Path路径所在文件的名字")]),t._v(" "),a("li",[a("code",[t._v("path.extname(path | string)")]),t._v("。获取指定字符串或者文件路径名字的后缀名，带.比如.txt")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#url","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("a",{attrs:{href:""}},[this._v("url")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("code",[t._v("url.parse(urlString[, parseQueryString[, slashesDenoteHost]])")]),t._v("。把url字符串解析为url对象")]),t._v(" "),a("li",[a("code",[t._v("url.format(urlObject)")]),t._v("。把url对象解析为字符串")]),t._v(" "),a("li",[a("code",[t._v("url.resolve(from, to)")]),t._v("。以一种 Web 浏览器解析超链接的方式, 基于一个基础 URL,对目标 URL进行解析。查看其源码实现："),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Url"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function-variable function"}},[t._v("resolve")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("relative"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("resolveObject")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token function"}},[t._v("urlParse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("relative"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("format")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"querystring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#querystring","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("a",{attrs:{href:""}},[this._v("querystring")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("querystring.parse")]),this._v("。一个URL查询字符串 str 解析成一个键值对的集合。")]),this._v(" "),s("li",[s("code",[this._v("querystring.stringify")]),this._v("。遍历给定的 obj 对象的自身属性，生成 URL 查询字符串。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stream","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("a",{attrs:{href:""}},[this._v("Stream")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("Node中很多数据结构都继承自Stream")]),this._v("。node处理IO采用了流（stream）的封装，分为四类，可读流、可写流和基于前者的读写流、转换流。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("strong",[t._v("HTTP responses, on the client")])]),t._v(" "),a("li",[a("strong",[t._v("HTTP requests, on the server")])]),t._v(" "),a("li",[t._v("fs read streams")]),t._v(" "),a("li",[t._v("zlib streams")]),t._v(" "),a("li",[t._v("crypto streams")]),t._v(" "),a("li",[t._v("TCP sockets")]),t._v(" "),a("li",[t._v("child process stdout and stderr")]),t._v(" "),a("li",[a("strong",[t._v("process.stdin")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"stream类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stream类","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("strong",[this._v("Stream类")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("code",[t._v("stream.Writable")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("write()")]),t._v(" 写入数据到流")]),t._v(" "),a("li",[a("strong",[t._v("end()")]),t._v(" 表明已没有数据要被写入可写流")]),t._v(" "),a("li",[t._v("Events\n"),a("ul",[a("li",[t._v("pipe")]),t._v(" "),a("li",[t._v("finish")]),t._v(" "),a("li",[t._v("close")]),t._v(" "),a("li",[t._v("error")])])])])]),t._v(" "),a("li",[a("code",[t._v("stream.Readable")]),t._v(" "),a("ul",[a("li",[t._v("pipe(destination:stream.Writable, options) 把可读数据流入可写流中")]),t._v(" "),a("li",[t._v("resume() 能读到最后，但数据为空")]),t._v(" "),a("li",[t._v("Events\n"),a("ul",[a("li",[a("strong",[t._v("data")])]),t._v(" "),a("li",[a("strong",[t._v("end")])]),t._v(" "),a("li",[t._v("close")]),t._v(" "),a("li",[t._v("error")]),t._v(" "),a("li",[t._v("readable")])])])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("a",{attrs:{href:""}},[this._v("http")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("code",[t._v("http.Server")]),t._v("。http.createServer(function(req, res){})返回该类。\n"),a("ul",[a("li",[t._v("listen()")])])]),t._v(" "),a("li",[a("code",[t._v("http.ClientRequest")]),t._v("。"),a("code",[t._v("Node作为客户端")]),t._v("。http.get()/http.request()返回该类。\n"),a("ul",[a("li",[a("code",[t._v("可写流")]),t._v("。详细参见上章节stream.Writable")]),t._v(" "),a("li",[t._v("write()。stream继承，请求写入数据，一般是POST请求需要。")]),t._v(" "),a("li",[t._v("end()。stream继承，请求发出。")]),t._v(" "),a("li",[a("code",[t._v("回调函数res是可读流")])])])]),t._v(" "),a("li",[a("code",[t._v("http.ServerResponse")]),t._v("。"),a("code",[t._v("Node作为服务端")]),t._v("。服务端res即是该类的实例。\n"),a("ul",[a("li",[a("code",[t._v("可写流")])]),t._v(" "),a("li",[t._v("setHeader(name, value)")]),t._v(" "),a("li",[t._v("writeHead(statusCode[, statusMessage][, headers])")]),t._v(" "),a("li",[t._v("write(chunk[, encoding][, callback])")]),t._v(" "),a("li",[t._v("end([data][, encoding][, callback])")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("http.get()与 http.request() 唯一的区别是它设置请求方法为 GET 且自动调用 req.end()")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在node是客户端的时候，req是从node这边发起的，是可写流，res是从外边响应的，是可读流。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("在node是服务端的时候，req是从客户端发起的，是可读流，res是从node响应的，是可写流。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"bufferglobal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bufferglobal","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("a",{attrs:{href:""}},[this._v("Buffer")]),s("sup",[s("code",[this._v("global")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("Node.js v6.0.0 之前，Buffer 实例是通过 Buffer 构造函数创建的，它根据参数返回不同的 Buffer。为了使 Buffer 实例的创建更可靠，new Buffer() 构造函数已被废弃，建议使用 Buffer.from()、Buffer.alloc()和 Buffer.allocUnsafe()")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("p",[a("code",[t._v("创建Buffer")])]),t._v(" "),a("ul",[a("li",[t._v("new Buffer(number/string/array)"),a("sup",[a("code",[t._v("Deprecated")])]),t._v("。推荐使用 Buffer.from(array/string) 和Buffer.alloc(size)代替。")]),t._v(" "),a("li",[a("strong",[t._v("Buffer.from(array/string)")])]),t._v(" "),a("li",[t._v("Buffer.alloc(size)")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Buffer静态方法")])]),t._v(" "),a("ul",[a("li",[t._v("Buffer.isBuffer(obj)")]),t._v(" "),a("li",[t._v("Buffer.byteLength(string)")]),t._v(" "),a("li",[t._v("Buffer.concat()")]),t._v(" "),a("li",[t._v("Buffer.compare()")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Buffer实例")])]),t._v(" "),a("ul",[a("li",[t._v("length")]),t._v(" "),a("li",[t._v("toString() buffer转为string")]),t._v(" "),a("li",[a("strong",[t._v("write(string, offset=0, length, encoding='utf8')")]),t._v("。对buffer对象写入string")]),t._v(" "),a("li",[t._v("copy()")]),t._v(" "),a("li",[t._v("slice()")]),t._v(" "),a("li",[t._v("compare()")]),t._v(" "),a("li",[t._v("equals()")]),t._v(" "),a("li",[t._v("fill()")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" buf "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Buffer")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'hello world'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 初始化之后,实例buf长度无法改变")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buf"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("toString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 11, hello world")]),t._v("\n\nbuf"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("write")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'temp'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buf"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("toString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 11, tempo world")]),t._v("\n\nbuf"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("write")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'01234567891234567890'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buf"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("toString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 11, 01234567891")]),t._v("\n")])])])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("code",[t._v("file文件操作")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("readFile(path[, options], callback)")])]),t._v(" "),a("ul",[a("li",[t._v("没有指定 encoding，则返回原始的 buffer")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("writeFile(file, data[, options], callback)")])]),t._v(" "),a("ul",[a("li",[t._v("如果文件已存在，则覆盖文件。")]),t._v(" "),a("li",[t._v("data支持 string/Buffer/TypedArray/DataView")]),t._v(" "),a("li",[t._v("data 是一个 buffer，则忽略 encoding")])])]),t._v(" "),a("li",[a("p",[t._v("copyFile(src, dest[, flags], callback)")])]),t._v(" "),a("li",[a("p",[t._v("rename(oldPath, newPath, callback)。文件重命名")])]),t._v(" "),a("li",[a("p",[t._v("write(fd, string[, positinon[, encoding]], callback)。将 string 写入到 fd 指定的文件写文件")])]),t._v(" "),a("li",[a("p",[t._v("exists(url, callback(boolean))"),a("sup",[a("code",[t._v("Deprecated")])]),t._v("。查询是否存在，"),a("code",[t._v("一般用在单纯检查文件")]),t._v("而不去操作(open/readFile/writeFile等操作文件不成立时会回调err)文件时。推荐使用fs.stat() or fs.access() 代替该方法。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("stat(path[, options],callback(err, stat))")]),t._v("。查询文件/目录信息")]),t._v(" "),a("ul",[a("li",[t._v("stat.isFile 是否一个普通文件")]),t._v(" "),a("li",[t._v("stat.isDirectory 是否一个目录")]),t._v(" "),a("li",[t._v("stat.ctime 最后一次修改文件的时间")])])])])]),t._v(" "),a("li",[a("code",[t._v("dir目录操作")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("readdir(path[, options], callback)")]),t._v("。读目录，获取目录下的"),a("code",[t._v("所有文件和文件夹")]),t._v("名称。")]),t._v(" "),a("li",[t._v("rmdir(path, callback)。移除目录")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("文件操作的path参数，绝对路径和相对路径都支持（相对路径基于process.cwd()）。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("sup",[s("code",[this._v("global")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("li",[a("p",[a("code",[t._v("process.argv")]),t._v("。一个包含命令行参数的数组。第一个元素是’node’，第二个元素是JavaScript文件的文件名。接下来的元素则是附加的命令行参数。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// process.js")]),t._v("\nprocess"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("forEach")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("': '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" val"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// output")]),t._v("\n$ node process"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js one two"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("three four\n"),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node\n"),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("Users"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("node"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("process"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n"),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" one\n"),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" two"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("three\n"),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" four\n")])])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("li",[a("p",[a("code",[t._v("process.env")]),t._v("。返回用户设置的环境变量。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// index.js")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token constant"}},[t._v("NODE_ENV")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// production")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// output")]),t._v("\n$ cross"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("env "),a("span",{attrs:{class:"token constant"}},[t._v("NODE_ENV")]),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("production node index\nproduction\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[s("code",[this._v("process.cwd()")]),this._v("。返回当前进程的工作目录")]),this._v(" "),s("blockquote",[s("p",[this._v("和 __dirname 不同, __dirname 返回的是当前文件的所在目录")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[s("code",[this._v("process.exit()")]),this._v("。退出当前程序。")]),this._v(" "),s("blockquote",[s("p",[this._v("当执行exit()方法时，可以使用"),s("code",[this._v("process.on('exit', callback)")]),this._v("作为退出程序前的清理工作。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("SIGINT")]),this._v("：interrupt，程序终止信号，通常在用户按下CTRL+C时发出，用来通知前台进程终止进程。")]),this._v(" "),s("li",[s("code",[this._v("SIGTERM")]),this._v("：terminate，程序结束信号，通常用来要求程序自己正常退出。process.kill()缺省产生这个信号。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("异步"),s("code",[this._v("创建子程序")]),this._v("有四种方式，后三种底层都是spawn实现的:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("child_process.spawn(command[, args][, options])")]),this._v(" "),s("li",[this._v("child_process.exec(command[, options][, callback])")]),this._v(" "),s("li",[this._v("child_process.execFile(file[, args][, options][, callback])")]),this._v(" "),s("li",[this._v("child_process.fork(modulePath[, args][, options])")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"child-process-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#child-process-2","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("strong",[this._v("child_process")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("code",[t._v("child_process.spawn")]),t._v("。Node.js 的父进程与衍生的子进程之间会建立 stdin、stdout 和 stderr 的管道。\n"),a("ul",[a("li",[a("code",[t._v("options.stdio")]),t._v(": stdio(标准输入输出) 用来配置子进程和父进程之间的 IO 通道,可以传递一个数组或者字符串。如，['pipe', 'pipe', 'pipe']，分别配置：标准输入、标准输出、标准错误。如果传递字符串，则三者将被配置成一样的值。简要介绍其中三个可以取的值：\n"),a("ul",[a("li",[a("code",[t._v("pipe（默认）")]),t._v("：父子进程间建立 pipe 通道，可以通过 stream 的方式来操作 IO")]),t._v(" "),a("li",[a("code",[t._v("inherit")]),t._v("：子进程直接使用父进程的 IO(该种情况使用较多,子进程命令中，执行的node文件里使用process对象与主文件中一致)")]),t._v(" "),a("li",[a("code",[t._v("ignore")]),t._v("：不建立 pipe 通道，不能 pipe、不能监听 data 事件、IO 全被忽略")])])])])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" spawn "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'child_process'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ls "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("spawn")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'ls'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v("'-al'")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    stdio"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'inherit'")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nls"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("on")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'data'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'data from child: '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" data"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\nls"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stderr"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("on")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'data'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'error from child: '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" data"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nls"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("on")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'close'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'child exists with code: '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" code"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("child_process.exec")]),this._v("。创建一个shell，然后在shell里执行命令。执行完成后，将stdout、stderr作为参数传入回调方法。exec 比较适合用来执行 shell 命令，然后获取输出。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" exec "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'child_process'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("exec")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'ls -al'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stdout"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stderr"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("error")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'error: '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" error"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'stdout: '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" stdout"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'stderr: '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" stderr"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("code",[t._v("events")]),t._v("。child_process支持以下事件：\n"),a("ul",[a("li",[a("code",[t._v("exit")]),t._v("。子进程退出。注意其和close的区别，当exit触发时，其stdio流有可能还打开着，可以在此时做一些清理工作。通常情况下，child_process.kill()会触发该事件。")]),t._v(" "),a("li",[a("code",[t._v("close")]),t._v("。当子进程关闭时。通常情况下，child_process.kill()也会触发该事件。")]),t._v(" "),a("li",[a("code",[t._v("error")]),t._v("。当子进程不能关闭时，关闭它会报error事件。调用kill()可能会触发该事件。")]),t._v(" "),a("li",[a("code",[t._v("message")]),t._v("。跟child_process.send方法有关,父子进程间通信。")]),t._v(" "),a("li",[a("code",[t._v("disconnect")]),t._v("。跟child_process.disconnect方法有关。")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章","aria-hidden":"true"}},[this._v("#")]),this._v(" 参考文章")])}],!1,null,null,null);e.options.__file="Node-常用API.md";s.default=e.exports}}]);