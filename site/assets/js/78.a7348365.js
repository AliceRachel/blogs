(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{351:function(t,e,r){"use strict";r.r(e);var a=r(9),n=Object(a.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"与缓存相关的http首部字段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#与缓存相关的http首部字段","aria-hidden":"true"}},[t._v("#")]),t._v(" 与缓存相关的HTTP首部字段")]),t._v(" "),r("ul",[r("li",[t._v("Cache-Control")]),t._v(" "),r("li",[t._v("Pragma")])]),t._v(" "),r("p",[t._v("在 http1.0 时代，给客户端设定缓存方式可通过两个字段——Pragma和Expires来规范。")]),t._v(" "),r("p",[t._v("当该字段值为no-cache的时候（事实上现在RFC中也仅标明该可选值），会知会客户端不要对该资源读缓存，即每次都得向服务器发一次请求才行。")]),t._v(" "),r("p",[t._v("http1.1新增了 Cache-Control 来定义缓存过期时间.\n若报文中同时出现了 Expires 和 Cache-Control，则以 Cache-Control 为准。\n也就是说优先级从高到低分别是 Pragma > Cache-Control > Expires")]),t._v(" "),r("p",[t._v("Cache-Control也是一个通用首部字段，这意味着它能分别在请求报文和响应报文中使用。")]),t._v(" "),r("h2",{attrs:{id:"参考文章"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考文章","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://imweb.io/topic/5795dcb6fb312541492eda8c",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP缓存控制小结"),r("OutboundLink")],1)])])])},[],!1,null,null,null);n.options.__file="http-cache.md";e.default=n.exports}}]);