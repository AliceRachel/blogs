(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{333:function(t,a,s){"use strict";s.r(a);var n=s(9),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"深度学习一览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深度学习一览","aria-hidden":"true"}},[t._v("#")]),t._v(" 深度学习一览")]),t._v(" "),s("p",[t._v("机器学习是实现人工智能的方法，深度学习是实现机器学习算法的技术。")]),t._v(" "),s("h2",{attrs:{id:"_1-基础概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-基础概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 基础概念")]),t._v(" "),s("h3",{attrs:{id:"_1-1-流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.1 流程")]),t._v(" "),s("ol",[s("li",[t._v("数据处理（采集 + 处理（如音频的去噪））")]),t._v(" "),s("li",[t._v("模型训练（特征（算法选择） + 训练）。以下已神经网络训练过程为例：\n"),s("ol",[s("li",[t._v("随机生成一组w和b")]),t._v(" "),s("li",[t._v("计算损失函数：例如y’和y的欧氏距离")]),t._v(" "),s("li",[t._v("迭代修改w和b的值（梯度下降、链式法则），让损失函数的结果趋于最小")]),t._v(" "),s("li",[t._v("停止：模型在训练集和验证集上的损失都最小的时候。")])])]),t._v(" "),s("li",[t._v("模型评估与优化（MSE、AUC+调参）")]),t._v(" "),s("li",[t._v("模型应用（部署 + A/B测试）")])]),t._v(" "),s("h3",{attrs:{id:"_1-2-算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-算法","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.2 算法")]),t._v(" "),s("ul",[s("li",[t._v("神经网络。它接受多个输入（x1，x2，x3…），产生一个输出（output）\n"),s("ul",[s("li",[t._v("DNN：深度神经网络")]),t._v(" "),s("li",[t._v("CNN：卷积神经网络（计算机视觉）")]),t._v(" "),s("li",[t._v("RNN：循环神经网络（自然语言处理）")]),t._v(" "),s("li",[t._v("GAN：对抗神经网络（模仿）")])])]),t._v(" "),s("li",[t._v("朴素贝叶斯。给定的待分类项，求解在此项出现的情况下其他各个类别出现的概率。典型案例：垃圾分类")]),t._v(" "),s("li",[t._v("KNN")]),t._v(" "),s("li",[t._v("SVM")]),t._v(" "),s("li",[t._v("聚类")]),t._v(" "),s("li",[t._v("自动编码器")])]),t._v(" "),s("h3",{attrs:{id:"_1-3-深度学习进展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-深度学习进展","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.3 深度学习进展")]),t._v(" "),s("ul",[s("li",[t._v("图像分类，CNN卷积神经网络")]),t._v(" "),s("li",[t._v("机器翻译，RNN循环神经网络")]),t._v(" "),s("li",[t._v("图像生成")])]),t._v(" "),s("h3",{attrs:{id:"神经网络"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#神经网络","aria-hidden":"true"}},[t._v("#")]),t._v(" 神经网络")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("神经元：\n特征\n权重\n激活函数")])]),t._v(" "),s("li",[s("p",[t._v("损失函数")])]),t._v(" "),s("li",[s("p",[t._v("神经网络训练：每次参数都不一样（因为要对大量数据都拟合），比如有些今天的数据符合这些权重，但明天的又不能了，所以训练时使用固定的参数肯定有问题。")]),t._v(" "),s("ul",[s("li",[t._v("梯度下降算法")])])])]),t._v(" "),s("p",[t._v("举个例子：\n假设你买房子，考虑房屋面积、房屋价格、社区评分三个要素，其权重分别为0.4，0.6，0.5。\n当有A楼房屋面积3星，房屋价格1星，社区评分2星。所以其加权值：0.4"),s("em",[t._v("3+0.6")]),t._v("1+0.5*2=2.8。假设激活函数是count/10（此时激活函数是第一层），则最终输出：2.8/10=0.28。")]),t._v(" "),s("p",[t._v("当还有一个决策人时，如你女朋友（此时又多一个神经元），她觉得权重是0.3，0.2，0.1，则最终输出：（3"),s("em",[t._v("0.3+1")]),t._v("0.2+2*0.1）/10=0.13。")]),t._v(" "),s("p",[t._v("此时需要在两个人基础上，再叠加一个激活函数，以算出最终的值")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-images.githubusercontent.com/6310131/68285115-a5460280-00b9-11ea-9fff-18f9ceee4677.png",alt:"image"}}),t._v(" "),s("img",{attrs:{src:"https://user-images.githubusercontent.com/6310131/68285914-218d1580-00bb-11ea-9f00-c335f524b214.png",alt:"image"}})]),t._v(" "),s("p",[t._v("推荐视频，了解AI：")]),t._v(" "),s("ul",[s("li",[t._v("https://www.imooc.com/learn/1063")]),t._v(" "),s("li",[t._v("https://www.youtube.com/watch?v=GmjiSAfHplQ&list=PLsYXQooxlb1rByOhOJ1Sp1gI8JSvNregB&index=3")])]),t._v(" "),s("h2",{attrs:{id:"_2-netease-深度学习流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-netease-深度学习流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. Netease 深度学习流程")]),t._v(" "),s("ol",[s("li",[t._v("训练模型\n"),s("ol",[s("li",[t._v("数据收集和清洗\n"),s("ol",[s("li",[t._v("上传到集群 hadoop hdf共享存储地址")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://dl.netease.com/docs/tutorials/bert_named_entity_recognition/bert_named_entity_recognition.html#%E6%95%B0%E6%8D%AE%E7%9A%84%E9%A2%84%E5%A4%84%E7%90%86",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据预处理"),s("OutboundLink")],1),t._v("，集群分布式处理能力")])])]),t._v(" "),s("li",[t._v("模型训练\n"),s("ol",[s("li",[t._v("写好代码，提交任务\n"),s("ul",[s("li",[t._v("单机/单机集群，都是生成单个进程任务。")]),t._v(" "),s("li",[t._v("多机任务（分布式）则数据并行，训练时读取不同的数据，然后计算梯度，各进程计算完梯度后进行同步（合并），使用合并后的梯度更新所有进程的参数，进行下一轮迭代。\n"),s("img",{attrs:{src:"https://dl.netease.com/docs/assets/img/data_parallel.818a0fae.png",alt:""}})])])]),t._v(" "),s("li",[t._v("训练（日志存储产出 + dashboard查看）")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://dl.netease.com/docs/tutorials/short_video_classification/short_video_classification.html#%E6%A8%A1%E5%9E%8B%E5%AD%98%E5%82%A8",target:"_blank",rel:"noopener noreferrer"}},[t._v("模型存储"),s("OutboundLink")],1)])]),t._v(" "),s("blockquote",[s("p",[t._v("所以在编写分布式训练程序时，需要在单卡训练程序的基础上，重写数据和梯度合并部分（意味着需要改源代码）。")])])]),t._v(" "),s("li",[t._v("模型测试\n"),s("ol",[s("li",[t._v("加载已训练好的模型，基于数据集进行结果测试。")])])]),t._v(" "),s("li",[t._v("评测和优化")])])]),t._v(" "),s("li",[t._v("模型部署上线 + 对外提供服务\n"),s("ul",[s("li",[t._v("使用tf serving/docker部署模型并对外提供服务")])])])]),t._v(" "),s("h3",{attrs:{id:"在线实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在线实例","aria-hidden":"true"}},[t._v("#")]),t._v(" 在线实例")]),t._v(" "),s("ul",[s("li",[t._v("pytouch手写字识别案例：https://github.com/pytorch/examples/blob/master/mnist/main.py")]),t._v(" "),s("li",[t._v("pytouch训练分类案例：https://pytorch.org/tutorials/beginner/blitz/cifar10_tutorial.html#sphx-glr-beginner-blitz-cifar10-tutorial-py\n"),s("ul",[s("li",[t._v("在线可运行代码：https://colab.research.google.com/github/pytorch/tutorials/blob/gh-pages/_downloads/cifar10_tutorial.ipynb#scrollTo=t6J5B3xw0vUC")])])]),t._v(" "),s("li",[t._v("空间转换案例：https://colab.research.google.com/github/pytorch/tutorials/blob/gh-pages/_downloads/spatial_transformer_tutorial.ipynb#scrollTo=WvmgjenBxkic")])]),t._v(" "),s("h2",{attrs:{id:"_3-netease-ai深度学习平台-v1-0架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-netease-ai深度学习平台-v1-0架构","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. Netease AI深度学习平台 V1.0架构")]),t._v(" "),s("p",[t._v("基于"),s("code",[t._v("slurm + conda")]),t._v("。使用slurm分配计算机资源和维护Job，conda则提供python环境。")]),t._v(" "),s("h3",{attrs:{id:"_3-1-slurm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-slurm","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.1 slurm")]),t._v(" "),s("p",[t._v("slurm是一种可用于大型计算节点集群的高度可伸缩和容错的"),s("code",[t._v("集群管理器和作业调度系统")]),t._v("。SLURM 维护着一个待处理工作的队列并管理此工作的整体资源利用。SLURM 会为任务队列合理地分配资源，并监视作业至其完成。")]),t._v(" "),s("blockquote",[s("p",[t._v("slurm分配集群计算机资源，开启job，跑模型训练。")])]),t._v(" "),s("h3",{attrs:{id:"_3-2-conda"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-conda","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.2 conda")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://medium.com/python4u/%E7%94%A8conda%E5%BB%BA%E7%AB%8B%E5%8F%8A%E7%AE%A1%E7%90%86python%E8%99%9B%E6%93%AC%E7%92%B0%E5%A2%83-b61fd2a76566",target:"_blank",rel:"noopener noreferrer"}},[t._v("conda"),s("OutboundLink")],1),t._v(" 是一个开源的跨平台工具软件。使用conda時，你可以進行建立(create)、輸出(export)、列表(list)、移除(remove)和更新(update)環境於不同Python版本及Packages，同時也可以分享你的虛擬環境。")]),t._v(" "),s("blockquote",[s("p",[t._v("可以理解为nvm一样的作用，管理node版本以及环境。而conda管理着python版本和环境。")])]),t._v(" "),s("h2",{attrs:{id:"_4-netease-ai深度学习平台-v2-0架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-netease-ai深度学习平台-v2-0架构","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. Netease AI深度学习平台 V2.0架构")]),t._v(" "),s("p",[t._v("底层基于"),s("code",[t._v("Docker + Kubernes")]),t._v("，顶层应用使用开源Kubeflow。")]),t._v(" "),s("h3",{attrs:{id:"_4-1-kubernes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-kubernes","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.1 Kubernes")]),t._v(" "),s("p",[t._v("kubernes 容器化编排工具（docker是容器化基础）。管理容器非常方便，其特性有：")]),t._v(" "),s("ul",[s("li",[t._v("方便的容器升级（修改yaml配置，自动更新替换）")]),t._v(" "),s("li",[t._v("提供容器的自动化复制和部署（随时扩展容器规模），同时支持负载均衡")])]),t._v(" "),s("p",[t._v("Pod：")]),t._v(" "),s("ul",[s("li",[t._v("pod是基本操作单元，也是应用运行的载体。整个k8s都是围绕着pod展开，比如如何部署运行pod，如何保证pod的数量，如何访问pod等。")]),t._v(" "),s("li",[t._v("Deployment定义了pod部署的信息")]),t._v(" "),s("li",[t._v("若干pod副本（副本是一个pod的多个实例）组成service，对外提供服务")])]),t._v(" "),s("p",[t._v("Deployment")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment "),s("span",{attrs:{class:"token comment"}},[t._v("# 类型")]),t._v("\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("app.kubernetes.io/name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" job"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("frontend\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" job"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("frontend\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubeflow\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("replicas")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1 ")]),s("span",{attrs:{class:"token comment"}},[t._v("# 多少副本")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("matchLabels")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("app.kubernetes.io/name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" job"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("frontend\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("app.kubernetes.io/name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" job"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("frontend\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" job"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("frontend\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hub.cn"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("east"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p1.netease.com/deeplearning/job"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("frontend"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token number"}},[t._v("0.1 ")]),s("span",{attrs:{class:"token comment"}},[t._v("# pod内容器镜像地址")]),t._v("\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" job"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("frontend\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),s("span",{attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n        "),s("span",{attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("serviceAccount")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("job"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard\n      "),s("span",{attrs:{class:"token key atrule"}},[t._v("serviceAccountName")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tf"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("job"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard\n")])])]),s("p",[t._v("Service：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service "),s("span",{attrs:{class:"token comment"}},[t._v("# 类型")]),t._v("\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("app.kubernetes.io/name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" job"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("frontend\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" job"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("frontend\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubeflow\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("80 ")]),s("span",{attrs:{class:"token comment"}},[t._v("#")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("targetPort")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("80")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 选择哪些pod组成service")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("app.kubernetes.io/name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" job"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("frontend\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" job"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("frontend\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterIP\n")])])]),s("p",[t._v("命令一览：")]),t._v(" "),s("div",{staticClass:"language-docker extra-class"},[s("pre",{pre:!0,attrs:{class:"language-docker"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# deployments -n代表指定命名空间")]),t._v("\nkubectl create "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f xxx.yaml "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("n kubeflow "),s("span",{attrs:{class:"token comment"}},[t._v("# 创建deploy")]),t._v("\nkubectl get deploy "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("n kubeflow "),s("span",{attrs:{class:"token comment"}},[t._v("# 获取在跑的deploy")]),t._v("\nkubectl edit deploy xxx "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("n kubeflow "),s("span",{attrs:{class:"token comment"}},[t._v("# 修改deploy配置")]),t._v("\nkubectl delete "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f xxx.yarm "),s("span",{attrs:{class:"token comment"}},[t._v("# 删除deploy")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("# service")]),t._v("\nkubectl create "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f service.yaml "),s("span",{attrs:{class:"token comment"}},[t._v("# 创建service")]),t._v("\nkubectl get service "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("all"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("namespace "),s("span",{attrs:{class:"token comment"}},[t._v("# 查看service")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("# pod")]),t._v("\nkubectl get pods "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("n kubeflow "),s("span",{attrs:{class:"token comment"}},[t._v("# 修改完后查看pods状态")]),t._v("\nkubectl exec xxx bash "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("n kubeflow "),s("span",{attrs:{class:"token comment"}},[t._v("# 进入pod中的container")]),t._v("\n")])])]),s("p",[t._v("推荐视频，了解k8s：https://www.imooc.com/video/19149")]),t._v(" "),s("ul",[s("li",[t._v("k8s快速部署：https://g.hz.netease.com/cloud_ml/documents/blob/master/design_docs/deployment/kubernetes/developer_guide.md")])]),t._v(" "),s("h4",{attrs:{id:"service-mesh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#service-mesh","aria-hidden":"true"}},[t._v("#")]),t._v(" Service Mesh")]),t._v(" "),s("p",[t._v("如果用一句话来解释什么是服务网格，可以将它比作是应用程序或者说微服务间的 TCP/IP，负责服务之间的网络调用、限流、熔断和监控。对于编写应用程序来说一般无须关心 TCP/IP 这一层（比如通过 HTTP 协议的 RESTful 应用），同样使用服务网格也就无须关心服务之间的那些原来是通过应用程序或者其他框架实现的事情，比如 Spring Cloud、OSS，现在只要交给服务网格就可以了。")]),t._v(" "),s("h3",{attrs:{id:"_4-2-kubeflow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-kubeflow","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.2 kubeflow")]),t._v(" "),s("ul",[s("li",[t._v("jupyter（nodebook server） 书写代码在线工具，以及提交job任务")]),t._v(" "),s("li",[t._v("tf-operator 查看job任务信息")])]),t._v(" "),s("h4",{attrs:{id:"tf-operator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tf-operator","aria-hidden":"true"}},[t._v("#")]),t._v(" tf-operator")]),t._v(" "),s("p",[t._v("tf-operator 为 tensorflow 提供了 TFJob 资源，以满足 tensorflow 分布式训练的资源和拓扑需求，最终达到一键拉起分布式机器学习集群的效果。")]),t._v(" "),s("blockquote",[s("p",[t._v("简单理解，tf-operator 就是让用户在 K8S 集群上部署训练任务更加方便和简单。")])]),t._v(" "),s("h2",{attrs:{id:"_5-ai框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-ai框架","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. AI框架")]),t._v(" "),s("h3",{attrs:{id:"_5-1-tensorflow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-tensorflow","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.1 tensorflow")]),t._v(" "),s("p",[t._v("TensorFlow 是一个端到端开源机器学习平台。个人理解，通过提供tensorflow python包以及它提供的API，可以进行模型的制作。")]),t._v(" "),s("ul",[s("li",[t._v("社区繁华")]),t._v(" "),s("li",[t._v("可扩展性好，支持分布式，可以扩展至多机多卡")])]),t._v(" "),s("ol",[s("li",[t._v("在系统上安装 Python 开发环境")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// 检查\npython --version\npip --version\nvirtualenv --version\n\n// 安装\n/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\nexport PATH="/usr/local/bin:/usr/local/sbin:$PATH"\nbrew update\nbrew install python@2  # Python 2\nsudo pip install -U virtualenv  # system-wide install\n')])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("开辟虚拟空间")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 创建一个新的虚拟环境，方法是选择 Python 解析器并创建一个 ./venv 目录来存放它\nvirtualenv --system-site-packages -p python2.7 ./venv\n\n// 使用特定于 shell 的命令激活该虚拟环境：(此时上下文已经有了tensorflow环境)\nsource ./venv/bin/activate  # sh, bash, ksh, or zsh\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("校验")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("python\nimport tensorflow as tf\nprint tf.__verison__\n")])])]),s("p",[t._v("开启tensorflow编程，如下：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("#!/usr/bin/env")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("# -*- coding: UTF-8 -*-")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("# from __future__ import absolute_import, division, print_function, unicode_literals")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" tensorflow "),s("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" tf\n"),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" tensorflow"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("contrib"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keras "),s("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" keras\n"),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" cPickle "),s("span",{attrs:{class:"token comment"}},[t._v("# python2自带")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" os "),s("span",{attrs:{class:"token comment"}},[t._v("# python自带")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("# NumPy(Numerical Python) 是 Python 语言的一个扩展程序库，支持大量的维度数组与矩阵运算.")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("# 单独安装：https://www.runoob.com/numpy/numpy-tutorial.html")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" numpy "),s("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" np\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__version__"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),t._v(" os"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("listdir"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'./package_runoob'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),t._v(" np"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eye"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("4")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_5-2-pytouch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-pytouch","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.2 Pytouch")]),t._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.youtube.com/watch?v=kGktiYF5upk&list=PLqVl9yVjQ_EK67vL3ZE2391TZOdQEbrpg",target:"_blank",rel:"noopener noreferrer"}},[t._v("mooc Tensorflow课程"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://developers.google.cn/machine-learning/crash-course/introduction-to-neural-networks/video-lecture",target:"_blank",rel:"noopener noreferrer"}},[t._v("google 机器学习"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://open.163.com/special/opencourse/machinelearning.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("斯坦福大学公开课 ：机器学习课程"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/Cloudox_/article/details/77823389",target:"_blank",rel:"noopener noreferrer"}},[t._v("纯新手入门安装TensorFlow并写Hello（mac版）"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.im/entry/58afdd9c2f301e0068f7da72",target:"_blank",rel:"noopener noreferrer"}},[t._v("人人都可以做深度学习应用：入门篇"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/exacity/deeplearningbook-chinese",target:"_blank",rel:"noopener noreferrer"}},[t._v("deeplearningbook-chinese"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/hzy46/Deep-Learning-21-Examples",target:"_blank",rel:"noopener noreferrer"}},[t._v("Deep-Learning-21-Examples"),s("OutboundLink")],1)])])])},[],!1,null,null,null);e.options.__file="deep-learning-base.md";a.default=e.exports}}]);