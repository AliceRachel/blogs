(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{319:function(t,s,a){"use strict";a.r(s);var n=a(9),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http","aria-hidden":"true"}},[t._v("#")]),t._v(" http")]),t._v(" "),a("h3",{attrs:{id:"三次握手，四次挥手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三次握手，四次挥手","aria-hidden":"true"}},[t._v("#")]),t._v(" 三次握手，四次挥手")]),t._v(" "),a("p",[t._v("TCP三次握手：三次握手的必要性：为了保证服务器能接收到客户端的信息并做出正确的应答而进行前两次（第一次和第二次）握手，为了保证客户端能够接收到服务端的信息并能做出正确的应答而进行后两次（第二次和第三次）握手。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("第一次握手")]),t._v("：建立连接时，客户端"),a("code",[t._v("发送syn包")]),t._v("（syn=j）到服务器，并"),a("code",[t._v("进入SYN_SENT状态")]),t._v("，等待服务器确认；SYN：同步序列编号（Synchronize Sequence Numbers）。")]),t._v(" "),a("li",[a("code",[t._v("第二次握手")]),t._v("：服务器收到syn包，必须确认客户的SYN（ack=j+1），同时自己也发送一个SYN包（syn=k），即"),a("code",[t._v("SYN+ACK包")]),t._v("，此时服务器进入"),a("code",[t._v("SYN_RECV状态")]),t._v("；")]),t._v(" "),a("li",[a("code",[t._v("第三次握手")]),t._v("：客户端收到服务器的"),a("code",[t._v("SYN+ACK包")]),t._v("，向服务器发送确认包ACK(ack=k+1），此包发送完毕，客户端和服务器进入"),a("code",[t._v("ESTABLISHED（TCP连接成功）状态")]),t._v("，完成三次握手。\n完成三次握手，客户端与服务器开始传送数据。这样就保证了，每次传送数据都会准确到达目标设备了。")])]),t._v(" "),a("p",[t._v("TCP四次挥手")]),t._v(" "),a("ol",[a("li",[t._v("客户端A发送一个"),a("code",[t._v("FIN")]),t._v("，用来关闭客户A到服务器B的数据传送。")]),t._v(" "),a("li",[t._v("服务器B收到这个FIN，它"),a("code",[t._v("发回一个ACK")]),t._v("，确认序号为收到的序号加1。和SYN一样，一个FIN将占用一个序号。")]),t._v(" "),a("li",[t._v("服务器B关闭与客户端A的连接，发送一个"),a("code",[t._v("FIN给客户端A")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("客户端A发回ACK")]),t._v("报文确认，并将确认序号设置为收到序号加1。")])]),t._v(" "),a("h3",{attrs:{id:"状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态码","aria-hidden":"true"}},[t._v("#")]),t._v(" 状态码")]),t._v(" "),a("p",[t._v("202: 服务器已接受请求，但尚未处理。 204: 服务器成功处理了请求，没有返回任何内容。")]),t._v(" "),a("p",[t._v("Cache-Control、Expires、Etag 和 Last-Modified 来设置 HTTP 缓存外")]),t._v(" "),a("p",[a("code",[t._v("强缓存：让客户端决定是否向服务器发送请求")]),t._v("（在chrome下表现为200 from cache）")]),t._v(" "),a("ul",[a("li",[t._v("http1.0\n"),a("ul",[a("li",[t._v("Expires"),a("sup",[a("code",[t._v("通用")])]),t._v("。启用缓存和定义缓存时间。时间是相对服务器")]),t._v(" "),a("li",[t._v("Pragma"),a("sup",[a("code",[t._v("通用")])]),t._v("。禁用缓存，字段值为no-cache的时候")])])]),t._v(" "),a("li",[t._v("http1.1\n"),a("ul",[a("li",[t._v("Cache-Control"),a("sup",[a("code",[t._v("通用")])]),t._v("。启用缓存/禁用缓存/定义时间（max-age相对时间）")])])])]),t._v(" "),a("p",[t._v("优先级从高到低分别是 Pragma -> Cache-Control -> Expires 。")]),t._v(" "),a("p",[a("code",[t._v("对比缓存")]),t._v("：让客户端与服务器之间能实现缓存文件是否更新的验证。")]),t._v(" "),a("ul",[a("li",[t._v("Last-Modified"),a("sup",[a("code",[t._v("响应")])]),t._v("。响应时，告诉浏览器资源的最后修改时间。")]),t._v(" "),a("li",[t._v("If-Modified-Since"),a("sup",[a("code",[t._v("请求")])]),t._v("。再次请求时，发送Last-Modified值。服务器拿到对比文件修改时间，没修改304，有修改200。")])]),t._v(" "),a("p",[a("code",[t._v("协商缓存")]),t._v("：因为存在文件修改，但内容没改，所以另外一种方式通过ETag数据比对（优先级高于Last-Modified / If-Modified-Since）")]),t._v(" "),a("ul",[a("li",[t._v("ETag"),a("sup",[a("code",[t._v("响应")])]),t._v("。")]),t._v(" "),a("li",[t._v("If-None-Match"),a("sup",[a("code",[t._v("请求")])]),t._v("。")])]),t._v(" "),a("blockquote",[a("p",[t._v("通用首部字段，这意味着它能分别在请求报文和响应报文中使用")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://images2015.cnblogs.com/blog/632130/201702/632130-20170210141453338-1263276228.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全","aria-hidden":"true"}},[t._v("#")]),t._v(" 安全")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("XSS")]),t._v("：跨站脚本攻击，是属于代码注入的一种。攻击者通过将代码注入网页中，其他用户看到会受到影响(代码内容有请求外部服务器);\n防范：")]),t._v(" "),a("ul",[a("li",[t._v("转义 < > 这些特殊字符为实体字符")]),t._v(" "),a("li",[t._v("利用正则判断攻击脚本")]),t._v(" "),a("li",[t._v("尽量修改节点文本而不是修改节点内容html")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("CSRF")]),t._v('（Cross-site request forgery）：一种跨站请求伪造，冒充用户发起请求，完成一些违背用户请求的行为。比如，你开发的网站中，有一个购买商品的操作，使用get接口。那么黑客网站就可以通过<image src="开发网站地址"，去调用你的开发网站（比如刷票）。\n防范：')]),t._v(" "),a("ul",[a("li",[t._v("尽量对要修改数据的请求使用post而不是get")]),t._v(" "),a("li",[t._v("给每一次用户登陆分配一个临时token，用服务端的setCookie头将此token种入用户cookie中，每次请求比对用户方token与服务器端token是否吻合。")]),t._v(" "),a("li",[t._v("服务器禁止跨域请求")]),t._v(" "),a("li",[t._v("及时清除用户的无效cookie")])])]),t._v(" "),a("li",[a("p",[t._v("网络劫持攻击。防范：https加密")])])]),t._v(" "),a("h2",{attrs:{id:"react"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react","aria-hidden":"true"}},[t._v("#")]),t._v(" React")]),t._v(" "),a("h3",{attrs:{id:"setstate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setstate","aria-hidden":"true"}},[t._v("#")]),t._v(" setState")]),t._v(" "),a("h3",{attrs:{id:"redux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redux","aria-hidden":"true"}},[t._v("#")]),t._v(" Redux")]),t._v(" "),a("h3",{attrs:{id:"mobx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mobx","aria-hidden":"true"}},[t._v("#")]),t._v(" Mobx")]),t._v(" "),a("h3",{attrs:{id:"生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期","aria-hidden":"true"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/6310131/57915545-9ed18d80-78c3-11e9-8aa5-6d1fb2cd6f63.png",alt:"image"}})]),t._v(" "),a("ul",[a("li",[t._v("创建时。将我们的组件插入到DOM中\n"),a("ul",[a("li",[t._v("constructor")]),t._v(" "),a("li",[t._v("render")]),t._v(" "),a("li",[t._v("componentDidMount")])])]),t._v(" "),a("li",[t._v("更新时\n"),a("ul",[a("li",[t._v("shouldComponentUpdate")]),t._v(" "),a("li",[t._v("render")]),t._v(" "),a("li",[t._v("componentDidUpdate")])])]),t._v(" "),a("li",[t._v("卸载时\n"),a("ul",[a("li",[t._v("componentWillunMount")])])]),t._v(" "),a("li",[t._v("废弃的三个生命周期\n"),a("ul",[a("li",[a("s",[t._v("componentWillMount")])]),t._v(" "),a("li",[a("s",[t._v("componentWillReceiveProps")])]),t._v(" "),a("li",[a("s",[t._v("componentWillUpdate")])])])]),t._v(" "),a("li",[t._v("取而代之的是两个新的生命周期函数\n"),a("ul",[a("li",[t._v("static getDerivedStateFromProps。当我们接收到新的属性想去修改我们state，可以使用getDerivedStateFromProps")]),t._v(" "),a("li",[t._v("getSnapshotBeforeUpdate")])])])]),t._v(" "),a("h3",{attrs:{id:"immutable-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immutable-js","aria-hidden":"true"}},[t._v("#")]),t._v(" immutable.js")]),t._v(" "),a("p",[t._v("Immutable Data 就是一旦创建，就不能再被更改的数据。对 Immutable 对象的任何修改或添加删除操作都会返回一个新的 Immutable 对象。Immutable 实现的原理是 "),a("code",[t._v("Persistent Data Structure（持久化数据结构）")]),t._v("，也就是使用旧数据创建新数据时，要保证旧数据同时可用且不变。同时为了避免 deepCopy 把所有节点都复制一遍带来的性能损耗，Immutable 使用了 "),a("code",[t._v("Structural Sharing（结构共享）")]),t._v("，即如果对象树中一个节点发生变化，只修改这个节点和受它影响的父节点，其它节点则进行共享。")]),t._v(" "),a("p",[t._v("Immutable.js本质上是一个JavaScript的持久化数据结构的库")]),t._v(" "),a("h3",{attrs:{id:"hooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hooks","aria-hidden":"true"}},[t._v("#")]),t._v(" Hooks")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("hooks是什么")]),t._v(" "),a("ul",[a("li",[t._v("React Hooks是React特殊的一类函数。要解决的问题是状态共享，是继 render-props 和 higher-order components 之后的第三种状态共享方案，不会产生 JSX 嵌套地狱问题。这个状态指的是状态逻辑，所以称为状态逻辑复用会更恰当，因为只共享数据处理逻辑，不会共享数据本身。")]),t._v(" "),a("li",[t._v("React Hooks 带来的好处不仅是 “更 FP，更新粒度更细，代码更清晰”，还有如下三个特性：\n"),a("ul",[a("li",[t._v("多个状态不会产生嵌套，写法还是平铺的（renderProps 可以通过 compose 解决，可不但使用略为繁琐，而且因为强制封装一个新对象而增加了实体数量）。")]),t._v(" "),a("li",[t._v("Hooks 可以引用其他 Hooks。")]),t._v(" "),a("li",[t._v("更容易将组件的 UI 与状态分离。")])])])])]),t._v(" "),a("li",[a("p",[t._v("为什么要hooks")]),t._v(" "),a("ul",[a("li",[t._v("复用有状态的组件太难。之前使用渲染属性（Render Props）和高阶组件（Higher-Order Components）复用，但层级太多")]),t._v(" "),a("li",[t._v("生命周期钩子函数里的逻辑太乱。")]),t._v(" "),a("li",[t._v("class this指向问题")])])])]),t._v(" "),a("h3",{attrs:{id:"为什么要fiber（v16引入）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要fiber（v16引入）","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么要fiber（V16引入）")]),t._v(" "),a("p",[t._v("性能。react在进行组件渲染时，从setState开始到渲染完成整个过程是同步的（“一气呵成”）。如果需要渲染的组件比较庞大，js执行会占据主线程时间较长，会导致页面响应度变差，使得react在动画、手势等应用中效果比较差。")]),t._v(" "),a("p",[t._v("React 15 及之前版本，"),a("code",[t._v("协调算法（Stack Reconciler）会一次同步处理整个组件树。它会递归遍历每个组件（虚拟DOM树），去比较新旧两颗树，得到需要更新的部分")]),t._v("。这个过程基于递归调用，一旦开始，很难去打断。也就是说，一旦工作量大，就会堵塞整个主线程（The main thread is the same as the UI thread.）。\n而事实上，我们的更新工作可能并不需要一次性全部完成，比如 offscreen 的 UI 更新并不紧急，比如 动画 需要优先完成——我们可以根据优先级调整工作，把diff过程按时间分片！")]),t._v(" "),a("h2",{attrs:{id:"vue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue","aria-hidden":"true"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),a("h3",{attrs:{id:"ssr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssr","aria-hidden":"true"}},[t._v("#")]),t._v(" SSR")]),t._v(" "),a("ul",[a("li",[t._v("服务端渲染\n服务端在返回 html 之前，在特定的区域，符号里用数据填充，再给客户端，客户端只负责解析 HTML 。")]),t._v(" "),a("li",[t._v("客户端渲染html 仅仅作为静态文件，客户端端在请求时，服务端不做任何处理，直接以原文件的形式返回给客户端客户端，然后根据 html 上的 JavaScript，生成 DOM 插入 html。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/3/4/161ef7bf329e8812?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})]),t._v(" "),a("p",[t._v("其基本实现原理：")]),t._v(" "),a("ul",[a("li",[t._v("app.js 作为客户端与服务端的公用入口，导出 Vue 根实例，供客户端 entry 与服务端 entry 使用。客户端 entry 主要作用挂载到 DOM 上，服务端 entry 除了创建和返回实例，还进行路由匹配与数据预获取。")]),t._v(" "),a("li",[t._v("webpack 为客服端打包一个 Client Bundle ，为服务端打包一个 Server Bundle 。")]),t._v(" "),a("li",[t._v("服务器接收请求时，会根据 url，加载相应组件，获取和解析异步数据，创建一个读取 Server Bundle 的 BundleRenderer，然后生成 html 发送给客户端。")])]),t._v(" "),a("p",[t._v("Vue SSR 的实现，主要就是把 Vue 的组件输出成一个完整 HTML。纯客户端输出过程有一个 complier 过程（「下题」中有一个简单描述），主要作用是将 template 转化成 render 字符串 。\nVue SSR 需要做的事多点（输出完整 HTML），除了 complier -> vnode，还需如数据获取填充至 HTML、客户端混合（hydration）、缓存等等。")]),t._v(" "),a("h3",{attrs:{id:"vue-router"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-router","aria-hidden":"true"}},[t._v("#")]),t._v(" Vue-Router")]),t._v(" "),a("ul",[a("li",[t._v("history")]),t._v(" "),a("li",[t._v("hash")]),t._v(" "),a("li",[t._v("abstract")])]),t._v(" "),a("h2",{attrs:{id:"css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css","aria-hidden":"true"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),a("h3",{attrs:{id:"flex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex","aria-hidden":"true"}},[t._v("#")]),t._v(" flex")]),t._v(" "),a("ul",[a("li",[t._v("容器主要属性\n"),a("ul",[a("li",[t._v("flex-direction：确定主轴方向")]),t._v(" "),a("li",[t._v("justify-content：主轴")]),t._v(" "),a("li",[t._v("align-items： 交叉轴")])])]),t._v(" "),a("li",[t._v("项目属性\n"),a("ul",[a("li",[t._v("flex： <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> 默认值为0 1 auto")])])])]),t._v(" "),a("h2",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他","aria-hidden":"true"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("h3",{attrs:{id:"小程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小程序","aria-hidden":"true"}},[t._v("#")]),t._v(" 小程序")]),t._v(" "),a("p",[t._v("小程序以离线包方式下载到本地，通过微信客户端载入和启动，开发规范简洁，技术封装彻底，自成开发体系，有 Native 和 H5 的影子，但又绝不雷同。小程序本身定位为一个简单的逻辑视图层框架。")]),t._v(" "),a("ol",[a("li",[t._v("原理：\n"),a("ul",[a("li",[t._v("小程序本质就是一个"),a("code",[t._v("单页面应用")]),t._v("，所有的页面渲染和事件处理，都在一个页面内进行，但又可以通过微信客户端调用原生的各种接口；")]),t._v(" "),a("li",[t._v("它的架构，是"),a("code",[t._v("数据驱动的架构模式")]),t._v("，它的UI和数据是分离的，所有的页面更新，都需要通过对数据的更改来实现；")]),t._v(" "),a("li",[a("code",[t._v("功能可分为webview和appService两个部分")]),t._v("；\nwebview用来展现UI，appService有来处理业务逻辑、数据及接口调用；\n两个部分在两个进程中运行，通过系统层JSBridge实现通信，实现UI的渲染、事件的处理等。(this.data的属性是不可以同步到视图的，必须调用this.setData()方法)")])])]),t._v(" "),a("li",[t._v("生命周期函数：\n"),a("ul",[a("li",[t._v("onLoad() 页面加载时触发，只会调用一次，可获取当前页面路径中的参数。")]),t._v(" "),a("li",[t._v("onShow() 页面显示/切入前台时触发，一般用来发送数据请求；")]),t._v(" "),a("li",[t._v("onReady() 页面初次渲染完成时触发, 只会调用一次，代表页面已可和视图层进行交互。")]),t._v(" "),a("li",[t._v("onHide() 页面隐藏/切入后台时触发, 如底部 tab 切换到其他页面或小程序切入后台等。")]),t._v(" "),a("li",[t._v("onUnload() 页面卸载时触发，如redirectTo或navigateBack到其他页面时。")])])]),t._v(" "),a("li",[a("code",[t._v("bind事件")]),t._v("绑定"),a("code",[t._v("不会阻止冒泡")]),t._v("事件向上冒泡，"),a("code",[t._v("catch事件")]),t._v("绑定可以"),a("code",[t._v("阻止")]),t._v("冒泡事件向上冒泡。")]),t._v(" "),a("li",[a("code",[t._v("mpvue")]),t._v(" 修改了 Vue.js 的 "),a("code",[t._v("运行时框架 runtime")]),t._v(" 和"),a("code",[t._v("代码编译器 compiler")]),t._v(" 实现，使其可以运行在小程序环境中，从而为小程序开发引入了整套 Vue.js 开发体验。\n"),a("ul",[a("li",[a("code",[t._v("生命周期和数据同步")]),t._v("。在 Vue.js 触发数据更新时实现数据同步。数据更新发端于小程序，处理自 Vue.js，Vue.js 数据变更后再同步到小程序。")]),t._v(" "),a("li",[a("code",[t._v("事件代理机制")]),t._v("。小程序组件节点上触发事件后，只要找到虚拟 DOM 上对应的节点，触发对应的事件。另一方面，Vue.js 事件响应如果触发了数据更新，其生命周期函数更新将自动触发，在此函数上同步更新小程序数据，数据同步也就实现了。")])])])]),t._v(" "),a("h3",{attrs:{id:"electron"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#electron","aria-hidden":"true"}},[t._v("#")]),t._v(" Electron")]),t._v(" "),a("p",[t._v("官网里这么说："),a("code",[t._v("electron 提供了一个 Nodejs 的运行时，专注于构建桌面应用，同时使用 web 页面来作为应用的 GUI")]),t._v("。你可以将其看作是一个由 JavaScript 控制的迷你版的 Chromium 浏览器。")]),t._v(" "),a("p",[t._v("翻译一下：它是一个运行时，可以像 Node 一样这样执行：electron app.js；也是一个使用 html + css + JavaScript 构建跨平台原生桌面应用的框架。本质上，electron 就是一个带了 Chrome 浏览器的壳子（无需考虑兼容性的问题）。")]),t._v(" "),a("p",[t._v("electron 用 web 页面作为它的 GUI，而不是绑定了 GUI 库的 JavaScript。它结合了 Chromium、Node.js 和用于调用操作系统本地功能的 APIs（如打开文件窗口、通知、图标等）。")]),t._v(" "),a("p",[a("code",[t._v("具有两个进程，分别是主进程，以及渲染进程")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"算法排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法排序","aria-hidden":"true"}},[t._v("#")]),t._v(" 算法排序")]),t._v(" "),a("h4",{attrs:{id:"冒泡算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#冒泡算法","aria-hidden":"true"}},[t._v("#")]),t._v(" 冒泡算法")]),t._v(" "),a("h4",{attrs:{id:"快速排序算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速排序算法","aria-hidden":"true"}},[t._v("#")]),t._v(" 快速排序算法")]),t._v(" "),a("h3",{attrs:{id:"webpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack","aria-hidden":"true"}},[t._v("#")]),t._v(" webpack")]),t._v(" "),a("p",[t._v("插件：DllPlugin和DllReferencePlugin、MiniCssExtractPlugin、HtmlWebpackPlugin、webpack.DefinePlugin")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/948614-1752f5c8993cc1a0.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/600/format/webp",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"常问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常问","aria-hidden":"true"}},[t._v("#")]),t._v(" 常问")]),t._v(" "),a("ul",[a("li",[t._v("Promise：Promise解决了因只用回调的代码而备受困扰的控制反转问题。回调函数表达异步和并发有两个主要缺陷：缺乏顺序性和可信任性。 Promise封装了依赖时间的状态--等待底层值的完成或拒绝，所以Promise本身与时间无关。")]),t._v(" "),a("li",[t._v("闭包：一个拥有许多变量和绑定了这些变量的环境的表达式（通常是一个函数），因而这些变量也是该表达式的一部分。简单说，指有权访问另一个函数作用域中的变量的函数")]),t._v(" "),a("li",[t._v("原型链：")]),t._v(" "),a("li",[t._v("this： this是指向当前上下文的一种标记，this在运行时绑定。")]),t._v(" "),a("li",[t._v("express：")])]),t._v(" "),a("h2",{attrs:{id:"网路题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网路题目","aria-hidden":"true"}},[t._v("#")]),t._v(" 网路题目")]),t._v(" "),a("h3",{attrs:{id:"_1-红绿灯实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-红绿灯实现","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 红绿灯实现")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("button")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("color"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" time"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolve"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("color"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" time"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token function"}},[t._v("resolve")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" time"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" p"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("flash")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("button")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"red"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3000")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// after last task end, which means the last task will need 3s")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("then")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("button")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"yellow"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1000")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// last spend 3s")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("then")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("button")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"green"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1000")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// last spend 1s")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("then")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("flash")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_1-算法题，给定一个整数金额的整钱n，还有2，3，5元三种货币，要你计算出所有能凑出整钱的组合个数。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-算法题，给定一个整数金额的整钱n，还有2，3，5元三种货币，要你计算出所有能凑出整钱的组合个数。","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 算法题，给定一个整数金额的整钱n，还有2，3，5元三种货币，要你计算出所有能凑出整钱的组合个数。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 笨办法，纯循环")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("countMoney")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("total"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("total "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" maxAmount "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" total "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 最小面币是2，所以除以2")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" maxAmount"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" j "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" maxAmount"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" k "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" k "),a("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" maxAmount"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" k"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n                "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sum "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" j "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" k "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sum "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" total"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    result"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{attrs:{class:"token keyword"}},[t._v("break")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sum "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" total"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{attrs:{class:"token keyword"}},[t._v("break")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token function"}},[t._v("countMoney")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 找规律，递归")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" inputMoneyArray "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ninputMoneyArray"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("sort")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("reverse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 从大到小排序")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("countMoney")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amount"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" moneyArr"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// 递归结束条件")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amount "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" moneyArr"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 不满足")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amount "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 满足")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("first"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("smallerMoneyArr"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" moneyArr "),a("span",{attrs:{class:"token comment"}},[t._v("// 取出第一个值first")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sum "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" amount "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" first"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// amount / first是最小循环次数")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" remainingAmount "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" amount "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("first "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" i"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 除去第一个值first，剩余金额")]),t._v("\n        sum "),a("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("countMoney")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("remainingAmount"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" smallerMoneyArr"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 递归调用")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sum"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("countMoney")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inputMoneyArray"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_1-session实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-session实现原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. session实现原理")]),t._v(" "),a("p",[t._v("1、创建Session的时候，服务器将生成一个唯一的sessionid然后用它生成一个关闭浏览器就会失效的cookie。")]),t._v(" "),a("p",[t._v("2、然后再将一个与这个sessionid关联的数据项加入散列表。")]),t._v(" "),a("p",[t._v("3、当浏览器端提交到服务器时，会通过sessionid=123去散列表中寻找属于该用户的Session信息。")]),t._v(" "),a("h3",{attrs:{id:"javascript几种异步方法和原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript几种异步方法和原理","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript几种异步方法和原理")]),t._v(" "),a("ol",[a("li",[t._v("回调")]),t._v(" "),a("li",[t._v("Promise")]),t._v(" "),a("li",[t._v("generator生成器/co")]),t._v(" "),a("li",[t._v("async/await")])]),t._v(" "),a("h3",{attrs:{id:"事件冒泡和捕获"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件冒泡和捕获","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件冒泡和捕获")]),t._v(" "),a("ol",[a("li",[t._v("冒泡： p -> html")]),t._v(" "),a("li",[t._v("捕获： html -> p")])]),t._v(" "),a("h3",{attrs:{id:"promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise","aria-hidden":"true"}},[t._v("#")]),t._v(" Promise")]),t._v(" "),a("ul",[a("li",[t._v("错误无法被捕获情况：在promise实例resolve之后,再抛出error")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" promise"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolve"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("reject"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{attrs:{class:"token function"}},[t._v("resolve")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Error")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'test'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//该错误无法被捕获")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("抛出的错误在没有通过 promise 的 catch 方法捕获时是会打印报错的，但是不会传递到外面触发其他错误监听函数（比如 window.onerror 、try-catch 等）")])]),t._v(" "),a("h3",{attrs:{id:"link和-import的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#link和-import的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" link和@import的区别")]),t._v(" "),a("p",[t._v("1）link是xhtml标签，除了可以加载css还可以定义RSS等其他事件，@import属于css范畴，只能加载css")]),t._v(" "),a("h3",{attrs:{id:"js跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js跨域","aria-hidden":"true"}},[t._v("#")]),t._v(" js跨域")]),t._v(" "),a("ol",[a("li",[t._v("JSONP")]),t._v(" "),a("li",[t._v("CORS")])]),t._v(" "),a("p",[t._v("2）link引用css时，在页面载入的同时加载；@import在页面完全加载完成之后加载。")]),t._v(" "),a("p",[t._v("3）link无兼容性问题，@import低版本浏览器不支持（目前可以忽略）")]),t._v(" "),a("p",[t._v("4）link支持使用javascript控制DOM去改变样式；@import不支持；")]),t._v(" "),a("h2",{attrs:{id:"node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node","aria-hidden":"true"}},[t._v("#")]),t._v(" Node")]),t._v(" "),a("p",[t._v("Node的特点有三个：单线程、事件驱动、非阻塞I/O.\n优点：")]),t._v(" "),a("ul",[a("li",[t._v("因为Node是基于事件驱动和无阻塞的，所以非常适合处理并发请求，因此构建在Node上的代理服务器相比其他技术实现（如Ruby）的服务器表现要好得多。")]),t._v(" "),a("li",[t._v("与Node代理服务器交互的客户端代码是由javascript语言编写的，因此客户端和服务器端都用同一种语言编写，这是非常美妙的事情。")])]),t._v(" "),a("h3",{attrs:{id:"node优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node优化","aria-hidden":"true"}},[t._v("#")]),t._v(" Node优化")]),t._v(" "),a("ol",[a("li",[t._v("使用最新版本的 Node.js")]),t._v(" "),a("li",[t._v("使用 fast-json-stringify 加速 JSON 序列化")]),t._v(" "),a("li",[t._v("提升 Promise 的性能。全局的 Promise 换为 bluebird 的实现")]),t._v(" "),a("li",[t._v("使用Promise.all()/Promise.any()")])]),t._v(" "),a("h3",{attrs:{id:"node事件循环模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node事件循环模型","aria-hidden":"true"}},[t._v("#")]),t._v(" Node事件循环模型")])])},[],!1,null,null,null);e.options.__file="前端面试.md";s.default=e.exports}}]);