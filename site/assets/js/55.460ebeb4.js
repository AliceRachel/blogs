(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{185:function(t,e,i){"use strict";i.r(e);var r=i(0),a=Object(r.a)({},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[t._m(0),t._v(" "),i("p",[t._v("最近看github star增长趋势项目，发现有个google chrome lab 开源的quicklink非常火爆，故详细看了下项目源码。源码简单清晰，总共只有3个文件，但涉及的知识点都比较前卫和实用，故整理记录下。")]),t._v(" "),t._m(1),t._v(" "),i("p",[t._v("quicklink 是一个通过预加载资源来提升后续方案速度的轻量级工具库。旨在提升浏览过程中，用户访问后续页面时的加载速度。")]),t._v(" "),i("p",[t._v('说到这可能大家首先想到的是html5 prefetch api，它的实现原理是利用浏览器的空闲时间去先下载用户指定需要的内容,然后缓存起来,这样用户下次加载时,就直接从缓存中取出来,从而可以快速响应出结果。但prefetch有几个限制，首先是兼容性问题，该api较新，支持的浏览器有限。再者是prefetch只支持在header中以<link rel="prefetch"> 方式加载，不支持页面中a标签以及js方式预加载。quicklink给我们一个轻量级兼容所有浏览器的预加载方案。')]),t._v(" "),t._m(2),t._v(" "),i("ul",[i("li",[i("a",{attrs:{href:"https://www.w3.org/TR/resource-hints/#prefetch",target:"_blank",rel:"noopener noreferrer"}},[t._v("prefetch"),i("OutboundLink")],1)])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"quicklink源码解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#quicklink源码解析","aria-hidden":"true"}},[this._v("#")]),this._v(" quicklink源码解析")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"quicklink介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#quicklink介绍","aria-hidden":"true"}},[this._v("#")]),this._v(" quicklink介绍")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"参考文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文章","aria-hidden":"true"}},[this._v("#")]),this._v(" 参考文章")])}],!1,null,null,null);a.options.__file="quicklink源码解析.md";e.default=a.exports}}]);