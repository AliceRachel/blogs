(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{379:function(a,t,s){"use strict";s.r(t);var e=s(9),n=Object(e.a)({},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"nginx反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx反向代理","aria-hidden":"true"}},[a._v("#")]),a._v(" Nginx反向代理")]),a._v(" "),s("h2",{attrs:{id:"什么是反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是反向代理","aria-hidden":"true"}},[a._v("#")]),a._v(" 什么是反向代理")]),a._v(" "),s("p",[a._v("当我们有一个服务器集群，并且服务器集群中的每台服务器的内容一样的时候，同样我们要直接从个人电脑访问到服务器集群服务器的时候无法访问，必须通过第三方服务器才能访问集群")]),a._v(" "),s("p",[a._v("这个时候，我们通过第三方服务器访问服务器集群的内容，但是我们并不知道是哪一台服务器提供的内容，此种代理方式称为反向代理。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://user-images.githubusercontent.com/6310131/49806720-674e3a80-fd93-11e8-9a95-b268cac617b7.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://user-images.githubusercontent.com/6310131/49806621-2a824380-fd93-11e8-86d1-c62f635142af.png",alt:"image"}})]),a._v(" "),s("h2",{attrs:{id:"反向代理优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反向代理优点","aria-hidden":"true"}},[a._v("#")]),a._v(" 反向代理优点")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("保护网站安全，所有请求都先经过代理服务器。")])]),a._v(" "),s("li",[s("p",[a._v("负载均衡，把请求转发到压力较小的服务器。")])]),a._v(" "),s("li",[s("p",[a._v("可以做一些中间层设置，比如缓存静态资源")])])]),a._v(" "),s("h2",{attrs:{id:"nginx基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx基础","aria-hidden":"true"}},[a._v("#")]),a._v(" Nginx基础")]),a._v(" "),s("h3",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("brew "),s("span",{attrs:{class:"token function"}},[a._v("install")]),a._v(" nginx\nnginx -v // 显示版本号则安装成功\n")])])]),s("h3",{attrs:{id:"命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令","aria-hidden":"true"}},[a._v("#")]),a._v(" 命令")]),a._v(" "),s("p",[a._v("nginx目录")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{attrs:{class:"token function"}},[a._v("cd")]),a._v(" /usr/local/etc/nginx\n")])])]),s("p",[a._v("启动nginx")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("nginx // 默认8080端口启动成功，可访问http://localhost:8080/\n")])])]),s("p",[a._v("关闭nginx")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("nginx -s stop\n")])])]),s("p",[a._v("重启nginx")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("nginx -s reload // 每次修改完nginx.conf文件就需要重启nginx\n")])])]),s("h3",{attrs:{id:"config配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#config配置","aria-hidden":"true"}},[a._v("#")]),a._v(" config配置")]),a._v(" "),s("p",[a._v("以下是典型的负载均衡nginx配置：")]),a._v(" "),s("ol",[s("li",[a._v("用户输入http://test-openai.com 时，访问80端口")]),a._v(" "),s("li",[a._v("nginx监听到80端口被访问，匹配到的/路径，被反向代理到http://dramatic-offical-website")]),a._v(" "),s("li",[a._v("dramatic-offical-website集群管理着一堆机器地址，从而实现负载均衡。")]),a._v(" "),s("li",[a._v("如果匹配到http://test-openai.com/images/ 路径，则直接映射/data下的文件")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 虚拟主机配置\nserver {\n    server_name test-openai.com; # 请求到达的服务器名\n    listen 80; # 监听80端口\n    listen 443 ssl; # https默认端口是443\n\n    # 对 / 所有做负载均衡+反向代理\n    location / {\n        proxy_pass http://dramatic-offical-website; # 代理到目标地址\n    }\n\n    # 静态文件，nginx自己处理\n    location /images/ {\n        root /data; # 映射到/data目录下\n    }\n}\n\n# 设定负载均衡后台服务器列表\nupstream dramatic-offical-website {\n    server 10.192.106.133;\n    server 10.192.106.134;\n}\n\n")])])])])},[],!1,null,null,null);n.options.__file="nginx.md";t.default=n.exports}}]);