(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{381:function(t,a,s){"use strict";s.r(a);var n=s(9),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"nginx反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx反向代理","aria-hidden":"true"}},[t._v("#")]),t._v(" Nginx反向代理")]),t._v(" "),s("h2",{attrs:{id:"什么是反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是反向代理","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是反向代理")]),t._v(" "),s("p",[t._v("当我们有一个服务器集群，并且服务器集群中的每台服务器的内容一样的时候，同样我们要直接从个人电脑访问到服务器集群服务器的时候无法访问，必须通过第三方服务器才能访问集群")]),t._v(" "),s("p",[t._v("这个时候，我们通过第三方服务器访问服务器集群的内容，但是我们并不知道是哪一台服务器提供的内容，此种代理方式称为反向代理。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-images.githubusercontent.com/6310131/49806720-674e3a80-fd93-11e8-9a95-b268cac617b7.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-images.githubusercontent.com/6310131/49806621-2a824380-fd93-11e8-86d1-c62f635142af.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"反向代理优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反向代理优点","aria-hidden":"true"}},[t._v("#")]),t._v(" 反向代理优点")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("保护网站安全，所有请求都先经过代理服务器。")])]),t._v(" "),s("li",[s("p",[t._v("负载均衡，把请求转发到压力较小的服务器。")])]),t._v(" "),s("li",[s("p",[t._v("可以做一些中间层设置，比如缓存静态资源")])])]),t._v(" "),s("h2",{attrs:{id:"nginx基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx基础","aria-hidden":"true"}},[t._v("#")]),t._v(" Nginx基础")]),t._v(" "),s("h3",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("brew install nginx\nnginx -v // 显示版本号则安装成功\n")])])]),s("h3",{attrs:{id:"命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令","aria-hidden":"true"}},[t._v("#")]),t._v(" 命令")]),t._v(" "),s("p",[t._v("nginx目录")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nginx -t // 显示nginx配置信息\ncd /usr/local/etc/nginx\n")])])]),s("p",[t._v("启动nginx")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nginx // 默认8080端口启动成功，可访问http://localhost:8080/\nservive nginx start // ubantu下\n")])])]),s("p",[t._v("关闭nginx")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nginx -s stop\nservive nginx stop // ubantu下\n")])])]),s("p",[t._v("重启nginx")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nginx -s reload // 每次修改完nginx.conf文件就需要重启nginx\nservive nginx restart // ubantu下\n")])])]),s("h3",{attrs:{id:"config配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#config配置","aria-hidden":"true"}},[t._v("#")]),t._v(" config配置")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("http")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("access_log")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("var"),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("logs"),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("access"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 记录日志地址")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# 日志格式")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("log_format")]),t._v(" combined "),s("span",{attrs:{class:"token string"}},[t._v("'$remote_addr - $remote_user [$time_local] '")]),t._v("\n                    "),s("span",{attrs:{class:"token string"}},[t._v("'\"$request\" $status $body_bytes_sent '")]),t._v("\n                    "),s("span",{attrs:{class:"token string"}},[t._v('\'"$http_referer" "$http_user_agent"\'')]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# 可以有多个server")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("8080")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 端口")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("root")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("up1"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# server根目录。未设置时，MacOS默认是/usr/local/var/www")]),t._v("\n\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("http")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token operator"}},[t._v("/")]),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token number"}},[t._v("8080")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 代理")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("images"),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("root")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 设置该路径下的根目录（覆盖server根目录）")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"location配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#location配置","aria-hidden":"true"}},[t._v("#")]),t._v(" location配置")]),t._v(" "),s("p",[t._v("语法规则： location [=|~|~*|^~] /uri/ { … }")]),t._v(" "),s("ul",[s("li",[t._v("= 开头表示精确匹配")]),t._v(" "),s("li",[t._v("~ 开头表示区分大小写的正则匹配")]),t._v(" "),s("li",[t._v("~*  开头表示不区分大小写的正则匹配")]),t._v(" "),s("li",[t._v("^~ 开头表示uri以某个常规字符串开头")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("server")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("80")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 监听80端口")]),t._v("\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# http://localhost/some/example.html访问/data/www/some/example.html")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("root")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# http://localhost/images/index.html访问/data/images/index.html")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# 注意：这里不是访问/data/index.html")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("images"),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("root")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("# http://localhost/images/example.png访问/data/images/example.png")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("~")]),t._v(" \\"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gif"),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v("jpg"),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v("png"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("root")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("images"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"负载均衡（反向代理）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡（反向代理）","aria-hidden":"true"}},[t._v("#")]),t._v(" 负载均衡（反向代理）")]),t._v(" "),s("ol",[s("li",[t._v("用户输入http://test-openai.com 时，访问80端口")]),t._v(" "),s("li",[t._v("nginx监听到80端口被访问，匹配到的/路径，被反向代理到http://dramatic-offical-website")]),t._v(" "),s("li",[t._v("dramatic-offical-website集群管理着一堆机器地址，从而实现负载均衡。")]),t._v(" "),s("li",[t._v("如果匹配到http://test-openai.com/images/ 路径，则直接映射/data下的文件")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 虚拟主机配置\nserver {\n    server_name test-openai.com; # 请求到达的服务器名\n    listen 80; # 监听80端口\n    listen 443 ssl; # https默认端口是443\n\n    # 对 / 所有做负载均衡+反向代理\n    location / {\n        proxy_pass http://dramatic-offical-website; # 代理到目标地址\n    }\n\n    # 静态文件，nginx自己处理\n    location /images/ {\n        root /data; # 映射到/data/images\n    }\n}\n\n# 设定负载均衡后台服务器列表\nupstream dramatic-offical-website {\n    server 10.192.106.133;\n    server 10.192.106.134;\n}\n\n")])])])])},[],!1,null,null,null);e.options.__file="nginx.md";a.default=e.exports}}]);