(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{536:function(e,t,a){"use strict";a.r(t);var r=a(6),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"《深入浅出nodejs》"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#《深入浅出nodejs》"}},[e._v("#")]),e._v(" 《深入浅出NodeJS》")]),e._v(" "),a("h3",{attrs:{id:"node为什么选择javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node为什么选择javascript"}},[e._v("#")]),e._v(" Node为什么选择Javascript")]),e._v(" "),a("ul",[a("li",[e._v("高性能 - V8")]),e._v(" "),a("li",[e._v("符合事件驱动")]),e._v(" "),a("li",[e._v("没有历史包袱")])]),e._v(" "),a("h3",{attrs:{id:"node实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node实现"}},[e._v("#")]),e._v(" Node实现")]),e._v(" "),a("p",[e._v("传统JS只能运行在浏览器中（沙箱环境），除了V8解释JS语法字符串外，还有WebKit（渲染内核）、HTML/DOM接口以及浏览器环境提供的事件循环。")]),e._v(" "),a("p",[e._v("Node去除跟UI相关的WebKit、HTML/DOM等接口，使用Libuv作为环境提供事件循环，使得使用上基本一致（浏览器通过事件驱动服务界面交互，Node通过事件驱动服务I/O）。")]),e._v(" "),a("p",[e._v("Node意义：Node打破了过去JavaScript只能在浏览器中运行的局面。前后端编程环境统一，大大降低前后端切换所需要的上下文交换代价。")]),e._v(" "),a("h3",{attrs:{id:"node网络编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node网络编程"}},[e._v("#")]),e._v(" Node网络编程")]),e._v(" "),a("p",[e._v("HTTP基于请求响应，一问一答。\n从协议角度看，"),a("strong",[e._v("浏览器其实是一个HTTP的代理")]),e._v("，用户的行为将会通过它转换为HTTP请求，发送给服务端。")]),e._v(" "),a("ul",[a("li",[e._v("node封装了http服务（应用层），它还提供tcp/udp（传输层）服务")]),e._v(" "),a("li",[e._v("请求头解析：req.method/url/headers")]),e._v(" "),a("li",[e._v("响应头设置：setHeader可进行多次，只有调用writeHeader后才会把报头写入到连接中。")]),e._v(" "),a("li",[e._v("响应正体设置：res.write/end，end如果带数据，等同于write + end")])])])}),[],!1,null,null,null);t.default=s.exports}}]);