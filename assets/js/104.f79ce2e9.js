(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{418:function(t,e,n){"use strict";n.r(e);var a=n(9),s=Object(a.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"深度学习概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#深度学习概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 深度学习概念")]),t._v(" "),n("h2",{attrs:{id:"基础概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基础概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 基础概念")]),t._v(" "),n("p",[t._v("流程：")]),t._v(" "),n("ul",[n("li",[t._v("数据处理（采集 + 去噪）")]),t._v(" "),n("li",[t._v("模型训练（特征 + 模型）。以下已神经网络训练过程为例：\n"),n("ol",[n("li",[t._v("随机生成一组w和b")]),t._v(" "),n("li",[t._v("计算损失函数：例如y’和y的欧氏距离")]),t._v(" "),n("li",[t._v("迭代修改w和b的值（梯度下降、链式法则），让损失函数的结果趋于最小")]),t._v(" "),n("li",[t._v("停止：模型在训练集和验证集上的损失都最小的时候。")])])]),t._v(" "),n("li",[t._v("模型评估与优化（MSE、AUC+调参）")]),t._v(" "),n("li",[t._v("模型应用（A/B测试）")])]),t._v(" "),n("p",[t._v("算法：")]),t._v(" "),n("ul",[n("li",[t._v("神经网络。它接受多个输入（x1，x2，x3…），产生一个输出（output）\n"),n("ul",[n("li",[t._v("DNN：深度神经网络")]),t._v(" "),n("li",[t._v("CNN：卷积神经网络（计算机视觉）")]),t._v(" "),n("li",[t._v("RNN：递归神经网络（自然语言处理）")]),t._v(" "),n("li",[t._v("GAN：对抗神经网络（模仿）")])])]),t._v(" "),n("li",[t._v("朴素贝叶斯。给定的待分类项，求解在此项出现的情况下其他各个类别出现的概率。典型案例：垃圾分类")]),t._v(" "),n("li",[t._v("KNN")]),t._v(" "),n("li",[t._v("SVM")]),t._v(" "),n("li",[t._v("聚类")]),t._v(" "),n("li",[t._v("自动编码器")])]),t._v(" "),n("p",[t._v("深度学习进展：")]),t._v(" "),n("ul",[n("li",[t._v("图像分类")]),t._v(" "),n("li",[t._v("机器翻译")]),t._v(" "),n("li",[t._v("图像生成")])]),t._v(" "),n("h2",{attrs:{id:"深度学习流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#深度学习流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 深度学习流程")]),t._v(" "),n("ol",[n("li",[t._v("模型训练\n"),n("ol",[n("li",[t._v("数据收集和清洗\n"),n("ol",[n("li",[t._v("上传到集群 hadoop hdf共享存储地址")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://dl.netease.com/docs/tutorials/bert_named_entity_recognition/bert_named_entity_recognition.html#%E6%95%B0%E6%8D%AE%E7%9A%84%E9%A2%84%E5%A4%84%E7%90%86",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据预处理"),n("OutboundLink")],1),t._v("，集群分布式处理能力")])])]),t._v(" "),n("li",[t._v("模型训练\n"),n("ol",[n("li",[t._v("写好代码，提交任务\n"),n("ul",[n("li",[t._v("单机/单机集群，都是生成单个进程任务。")]),t._v(" "),n("li",[t._v("多机任务（分布式）则数据并行，训练时读取不同的数据，然后计算梯度，各进程计算完梯度后进行同步（合并），使用合并后的梯度更新所有进程的参数，进行下一轮迭代。\n"),n("img",{attrs:{src:"https://dl.netease.com/docs/assets/img/data_parallel.818a0fae.png",alt:""}})])])]),t._v(" "),n("li",[t._v("训练（日志存储产出 + dashboard查看）")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://dl.netease.com/docs/tutorials/short_video_classification/short_video_classification.html#%E6%A8%A1%E5%9E%8B%E5%AD%98%E5%82%A8",target:"_blank",rel:"noopener noreferrer"}},[t._v("模型存储"),n("OutboundLink")],1)])]),t._v(" "),n("blockquote",[n("p",[t._v("所以在编写分布式训练程序时，需要在单卡训练程序的基础上，重写数据和梯度合并部分（意味着需要改源代码）。")])])]),t._v(" "),n("li",[t._v("模型测试\n"),n("ol",[n("li",[t._v("加载已训练好的模型，基于数据集进行结果测试。")])])]),t._v(" "),n("li",[t._v("评测和优化")])])]),t._v(" "),n("li",[t._v("模型部署上线 + 对外提供服务\n"),n("ul",[n("li",[t._v("使用tf serving部署模型并对外提供服务")])])])]),t._v(" "),n("h2",{attrs:{id:"tensorflow"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tensorflow","aria-hidden":"true"}},[t._v("#")]),t._v(" tensorflow")]),t._v(" "),n("p",[t._v("TensorFlow 是一个端到端开源机器学习平台。个人理解，通过提供tensorflow python包以及它提供的API，可以进行模型的制作。")]),t._v(" "),n("ol",[n("li",[t._v("在系统上安装 Python 开发环境")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('// 检查\npython --version\npip --version\nvirtualenv --version\n\n// 安装\n/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\nexport PATH="/usr/local/bin:/usr/local/sbin:$PATH"\nbrew update\nbrew install python@2  # Python 2\nsudo pip install -U virtualenv  # system-wide install\n')])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("开辟虚拟空间")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 创建一个新的虚拟环境，方法是选择 Python 解析器并创建一个 ./venv 目录来存放它\nvirtualenv --system-site-packages -p python2.7 ./venv\n\n// 使用特定于 shell 的命令激活该虚拟环境：(此时上下文已经有了tensorflow环境)\nsource ./venv/bin/activate  # sh, bash, ksh, or zsh\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("校验")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("python\nimport tensorflow as tf\nprint tf.__verison__\n")])])]),n("p",[t._v("开启tensorflow编程，如下：")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("#!/usr/bin/env")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("# -*- coding: UTF-8 -*-")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("# from __future__ import absolute_import, division, print_function, unicode_literals")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" tensorflow "),n("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" tf\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" tensorflow"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("contrib"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keras "),n("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" keras\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" cPickle "),n("span",{attrs:{class:"token comment"}},[t._v("# python2自带")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" os "),n("span",{attrs:{class:"token comment"}},[t._v("# python自带")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("# NumPy(Numerical Python) 是 Python 语言的一个扩展程序库，支持大量的维度数组与矩阵运算.")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("# 单独安装：https://www.runoob.com/numpy/numpy-tutorial.html")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" numpy "),n("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" np\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tf"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__version__"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),t._v(" os"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("listdir"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'./package_runoob'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),t._v(" np"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eye"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("4")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"slurm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#slurm","aria-hidden":"true"}},[t._v("#")]),t._v(" slurm")]),t._v(" "),n("p",[t._v("slurm是一种可用于大型计算节点集群的高度可伸缩和容错的"),n("code",[t._v("集群管理器和作业调度系统")]),t._v("。SLURM 维护着一个待处理工作的队列并管理此工作的整体资源利用。SLURM 会为任务队列合理地分配资源，并监视作业至其完成。")]),t._v(" "),n("blockquote",[n("p",[t._v("slurm分配集群计算机资源，开启job，跑模型训练。")])]),t._v(" "),n("h2",{attrs:{id:"service-mesh"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#service-mesh","aria-hidden":"true"}},[t._v("#")]),t._v(" Service Mesh")]),t._v(" "),n("p",[t._v("如果用一句话来解释什么是服务网格，可以将它比作是应用程序或者说微服务间的 TCP/IP，负责服务之间的网络调用、限流、熔断和监控。对于编写应用程序来说一般无须关心 TCP/IP 这一层（比如通过 HTTP 协议的 RESTful 应用），同样使用服务网格也就无须关心服务之间的那些原来是通过应用程序或者其他框架实现的事情，比如 Spring Cloud、OSS，现在只要交给服务网格就可以了。")]),t._v(" "),n("h2",{attrs:{id:"tf-operator"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tf-operator","aria-hidden":"true"}},[t._v("#")]),t._v(" tf-operator")]),t._v(" "),n("p",[t._v("tf-operator 为 tensorflow 提供了 TFJob 资源，以满足 tensorflow 分布式训练的资源和拓扑需求，最终达到一键拉起分布式机器学习集群的效果。")]),t._v(" "),n("blockquote",[n("p",[t._v("简单理解，tf-operator 就是让用户在 K8S 集群上部署训练任务更加方便和简单。")])]),t._v(" "),n("h2",{attrs:{id:"参考文章"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考文章","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://www.youtube.com/watch?v=kGktiYF5upk&list=PLqVl9yVjQ_EK67vL3ZE2391TZOdQEbrpg",target:"_blank",rel:"noopener noreferrer"}},[t._v("mooc Tensorflow课程"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://developers.google.cn/machine-learning/crash-course/introduction-to-neural-networks/video-lecture",target:"_blank",rel:"noopener noreferrer"}},[t._v("google 机器学习"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"http://open.163.com/special/opencourse/machinelearning.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("斯坦福大学公开课 ：机器学习课程"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://blog.csdn.net/Cloudox_/article/details/77823389",target:"_blank",rel:"noopener noreferrer"}},[t._v("纯新手入门安装TensorFlow并写Hello（mac版）"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://juejin.im/entry/58afdd9c2f301e0068f7da72",target:"_blank",rel:"noopener noreferrer"}},[t._v("人人都可以做深度学习应用：入门篇"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/exacity/deeplearningbook-chinese",target:"_blank",rel:"noopener noreferrer"}},[t._v("deeplearningbook-chinese"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/hzy46/Deep-Learning-21-Examples",target:"_blank",rel:"noopener noreferrer"}},[t._v("Deep-Learning-21-Examples"),n("OutboundLink")],1)])])])},[],!1,null,null,null);s.options.__file="deep-learning-base.md";e.default=s.exports}}]);